version: '3.8'

services:
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  backend:
    build:
      context: .
      dockerfile: docker/Dockerfile.backend
    ports:
      - "8000:8000"
    environment:
      - REDIS_URL=redis://redis:6379/0
      - ENVIRONMENT=development
      - API_HOST=0.0.0.0
      - API_PORT=8000
    env_file:
      - .env
    volumes:
      - .:/app
      - /app/.venv  # Exclude venv from volume mount
    depends_on:
      redis:
        condition: service_healthy
    command: uvicorn backend.main:app --host 0.0.0.0 --port 8000 --reload
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    build:
      context: .
      dockerfile: docker/Dockerfile.frontend
    ports:
      - "8501:8501"
    environment:
      - BACKEND_URL=http://backend:8000
      - FRONTEND_HOST=0.0.0.0
      - FRONTEND_PORT=8501
    env_file:
      - .env
    volumes:
      - .:/app
      - /app/.venv  # Exclude venv from volume mount
    depends_on:
      backend:
        condition: service_healthy
    command: streamlit run frontend/app.py --server.address 0.0.0.0 --server.port 8501

volumes:
  redis_data: 